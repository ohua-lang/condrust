on: 
  push: 
    branches: ["master", "main"]
  pull_request:
    branches: ["master", "main"]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout ohuac
        uses: actions/checkout@v3
        with:
          node-version: 16
          repository: 'ohua-lang/ohuac'
          token: ${{ secrets.PULL_TOKEN }}
          fetch-depth: 0
          path: 'ohuac'
      - name: Checkout ohuac-commons
        uses: actions/checkout@v3
        with:
          node-version: 16
          repository: 'ohua-lang/ohuac-commons'
          token: ${{ secrets.PULL_TOKEN }}
          fetch-depth: 0
          path: 'ohuac-commons'
      - name: Checkout ohua-frontend
        uses: actions/checkout@v3
        with:
          node-version: 16
          repository: 'ohua-lang/ohua-frontend'
          token: ${{ secrets.PULL_TOKEN }}
          fetch-depth: 0
          path: 'ohua-frontend'
      - name: Checkout ohua-backend
        uses: actions/checkout@v3
        with:
          node-version: 16
          repository: 'ohua-lang/ohua-backend'
          token: ${{ secrets.PULL_TOKEN }}
          fetch-depth: 0
          path: 'ohua-backend'
      - name: Checkout ohua-core
        uses: actions/checkout@v3
        with:
          node-version: 16
          repository: 'ohua-lang/ohua-core'
          token: ${{ secrets.PULL_TOKEN }}
          fetch-depth: 0
          path: 'ohua-core'
      - name: Checkout ohuac-integrations
        uses: actions/checkout@v3
        with:
          node-version: 16
          repository: 'ohua-lang/ohuac-integrations'
          token: ${{ secrets.PULL_TOKEN }}
          fetch-depth: 0
          path: 'ohuac-integrations'

      - name: Get current branch
        id: branch-name
        uses: tj-actions/branch-names@v5
      - name: Check out the branch in question
        run: |
          for dir in */
          do
            cd $dir
            if git rev-parse --quiet --verify origin/${{ steps.branch-name.outputs.current_branch }} > /dev/null; then
              git checkout ${{ steps.branch-name.outputs.current_branch }}
              echo "$dir checked out ${{ steps.branch-name.outputs.current_branch }}"
            else
              echo "$dir has no branch ${{ steps.branch-name.outputs.current_branch }}"
            fi
            cd ..
          done
        shell: bash

      # set up nix
      - name: Install nix
        uses: cachix/install-nix-action@v18
        with:
          node-version: 16
          install_url: https://github.com/NixOS/nixpkgs/archive/b6966d911da89e5a7301aaef8b4f0a44c77e103c.tar.gz
          #nix_path: nixpkgs=channel:nixos-unstable

      - name: Get nixpkgs hash
        id: nixpkgs-hash
        run: |
          echo "name=hash::$(nix-instantiate --eval -E '(import <nixpkgs> {}).lib.version')" >> $GITHUB_OUTPUT
        shell: bash
      
      - name: Cache Haskell build artifacts for dependencies
        uses: actions/cache@v2
        with:
          path: |
            ohuac/.stack_work
            ~/.stack
          key: ohuac-${{ runner.os }}-${{ steps.nixpkgs-hash.outputs.hash }}-${{ hashFiles('ohuac/stack.yaml') }}
      - name: Build ohuac
        run: |
          cd ohuac
          nix-shell --run "stack build"
      - name: Run tests
        run: |
          cd ohuac
          nix-shell --run "stack test"
