name: ohua-core
version: '0.3.0'
synopsis: Fundamental, platform independent functionality of the ohua compiler.
description: |
  Components for compiling a portable dataflow graph from an expression-based language.
  Performs tasks such as rewriting, lowering and optimizations.
  Resulting graphs can be executed by any runtime, regardless of platform or language
  that implements the ohua core operators and execution semantics.

  For the standalone executable compiler see https://github.com/sertel/ohuac
category: Concurrency
author:
- Sebastian Ertel
- Justus Adam
maintainer: sebastian.ertel@gmail.com
license: OtherLicense
license-file: LICENSE
github: sertel/ohua-core
extra-source-files:
- cbits/compat.h
dependencies:
- base >=4.8 && <5
- text
- mtl
- aeson # >= 1.0.0.0
- lens
- containers
- bytestring
- data-default-class
- universum >= 1.0 # on version 1.6.1
- generic-lens >= 1.0.0.2
- ohuac-commons
- extra
- singletons
default-extensions:
- OverloadedStrings
- OverloadedLists
- MultiParamTypeClasses
- FunctionalDependencies
- TypeFamilies
- GADTs
- FlexibleContexts
- FlexibleInstances
- TypeSynonymInstances
- LambdaCase
- TupleSections
- BangPatterns
- ExplicitForAll
- ScopedTypeVariables
- DefaultSignatures
- DeriveFunctor
- DeriveFoldable
- DeriveTraversable
- DeriveGeneric
- DeriveDataTypeable
- PatternSynonyms
- NamedFieldPuns
- RecordWildCards
- ConstraintKinds
- StandaloneDeriving
- NoImplicitPrelude
- RankNTypes
- ViewPatterns
- TypeApplications
- DataKinds
when:
- condition: impl(ghc >= 8.4.0)
  ghc-options:
  - -Wall
  - -Wcompat
  - -Wincomplete-record-updates
  - -Wincomplete-uni-patterns
  - -Wredundant-constraints
library:
  source-dirs: src
  dependencies:
  - transformers
  - unordered-containers
  - hashable
  #- monad-loops
  - vector
  - bifunctors
  - recursion-schemes
  - free
  - boxes
  - transformers-base
  #- monad-control
  - comonad
  - fgl
  - monad-logger
  - fast-logger
  - prettyprinter
  - safe-exceptions
  - template-haskell
  - th-lift-instances
  include-dirs:
    cbits
  when:
  - condition: flag(debug)
    cpp-options: -DDEBUG=1

flags:
  debug:
    manual: true
    default: true
